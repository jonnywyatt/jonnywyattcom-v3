{"version":3,"sources":["../../../src/server/middleware/react-init.jsx"],"names":["init","req","res","originalUrl","error","matchedRoute","status","httpCode","send","store","appConfig","dispatch","then","appHtml","render","appState","JSON","stringify","getState","replace","catch","err","displayError","noAnalytics"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AAAA,SAAc;AAC3BA,UAAM,cAACC,GAAD,EAAMC,GAAN,EAAc;AAClB,gCAAWD,IAAIE,WAAf,EAA4B,UAACC,KAAD,EAAQC,YAAR,EAAyB;AACnD,YAAID,KAAJ,EAAW;AACT,iBAAOF,IAAII,MAAJ,CAAWF,MAAMG,QAAjB,EAA2BC,IAA3B,EAAP;AACD;AACD,YAAMC,QAAQ,6BACZC,SADY,EAEZL,YAFY,EAGZJ,GAHY,CAAd;AAKA,eAAO,8BAAeQ,MAAME,QAArB,EAA+BN,YAA/B,EACJO,IADI,CACC,YAAM;AACV,cAAMC,UAAU,4BACd;AAAA;AAAA,cAAU,OAAOJ,KAAjB;AACE;AADF,WADc,CAAhB;AAKAP,cAAIY,MAAJ,CAAW,OAAX,EAAoB;AAClBD,4BADkB;AAElBE,sBAAUC,KAAKC,SAAL,CAAeR,MAAMS,QAAN,EAAf,EAAiCC,OAAjC,CAAyC,MAAzC,EAAiD,QAAjD;AAFQ,WAApB;AAID,SAXI,EAYJC,KAZI,CAYE,UAACC,GAAD,EAAS;AACd,2BAAOjB,KAAP,CAAaiB,GAAb;AACAnB,cAAIY,MAAJ,CAAW,OAAX,EAAoB,EAAEV,OAAOiB,IAAIC,YAAJ,IAAoB,6BAA7B,EAA4DC,aAAa,IAAzE,EAApB;AACD,SAfI,CAAP;AAgBD,OAzBD;AA0BD;AA5B0B,GAAd;AAAA,C","file":"react-init.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { Provider } from 'react-redux';\nimport logger from '../../common/utils/logger';\n\nimport App from '../../common/containers/App';\nimport matchRoute from '../../common/utils/match-route';\nimport fetchDataNeeds from '../../common/utils/fetch-data-needs';\nimport seedStore from './helpers/seed-store-data';\n\nexport default appConfig => ({\n  init: (req, res) => {\n    matchRoute(req.originalUrl, (error, matchedRoute) => {\n      if (error) {\n        return res.status(error.httpCode).send();\n      }\n      const store = seedStore(\n        appConfig,\n        matchedRoute,\n        req\n      );\n      return fetchDataNeeds(store.dispatch, matchedRoute)\n        .then(() => {\n          const appHtml = renderToString(\n            <Provider store={store}>\n              <App />\n            </Provider>\n          );\n          res.render('index', {\n            appHtml,\n            appState: JSON.stringify(store.getState()).replace(/<\\//g, '\\\\x3C/')\n          });\n        })\n        .catch((err) => {\n          logger.error(err);\n          res.render('error', { error: err.displayError || 'Application rendering error', noAnalytics: true });\n        });\n    });\n  }\n});\n"]}