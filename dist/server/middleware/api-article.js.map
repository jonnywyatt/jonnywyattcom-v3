{"version":3,"sources":["../../../src/server/middleware/api-article.js"],"names":["getBySlug","req","res","find","slug","params","lean","exec","err","articles","error","status","json","getAll","post","article","body","title","lower","symbols","createdDate","Date","toISOString","contents","save","xhr","redirect"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,YAAM;AACnB,SAAO;AACLA,eAAW,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,6BAAaC,IAAb,CAAkB,EAAEC,MAAMH,IAAII,MAAJ,CAAWD,IAAnB,EAAlB,EAA6CE,IAA7C,GAAoDC,IAApD,CAAyD,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC1E,YAAID,GAAJ,EAAS;AACP,2BAAOE,KAAP,CAAaF,GAAb;AACA,iBAAON,IAAIS,MAAJ,CAAW,GAAX,CAAP;AACD;AACDT,YAAIU,IAAJ,CAASH,SAAS,CAAT,KAAe,EAAxB;AACD,OAND;AAOD,KATI;AAULI,YAAQ,gBAACZ,GAAD,EAAMC,GAAN,EAAc;AACpB,6BAAaC,IAAb,GAAoBG,IAApB,GAA2BC,IAA3B,CAAgC,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACjD,YAAID,GAAJ,EAAS;AACP,2BAAOE,KAAP,CAAaF,GAAb;AACA,iBAAON,IAAIS,MAAJ,CAAW,GAAX,CAAP;AACD;AACDT,YAAIU,IAAJ,CAASH,QAAT;AACD,OAND;AAOD,KAlBI;AAmBLK,UAAM,cAACb,GAAD,EAAMC,GAAN,EAAc;AAClB,UAAMa,UAAU,2BAAiB;AAC/BX,cAAM,oBAAKH,IAAIe,IAAJ,CAASC,KAAd,EAAqB,EAAEC,OAAO,IAAT,EAAeC,SAAS,IAAxB,EAArB,CADyB;AAE/BC,qBAAa,IAAIC,IAAJ,GAAWC,WAAX,EAFkB;AAG/BL,eAAOhB,IAAIe,IAAJ,CAASC,KAHe;AAI/BM,kBAAUtB,IAAIe,IAAJ,CAASO;AAJY,OAAjB,CAAhB;AAMAR,cAAQS,IAAR,CAAa,UAAChB,GAAD,EAAMO,OAAN,EAAkB;AAC7B,YAAIP,GAAJ,EAAS;AACP,2BAAOE,KAAP,CAAaF,GAAb;AACA,iBAAON,IAAIS,MAAJ,CAAW,GAAX,CAAP;AACD;AACD,YAAIV,IAAIwB,GAAR,EAAa,OAAOvB,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,OAArB,CAAP;AACb,eAAOb,IAAIwB,QAAJ,gBAA0BX,QAAQX,IAAlC,CAAP;AACD,OAPD;AAQD;AAlCI,GAAP;AAoCD,C","file":"api-article.js","sourcesContent":["import slug from 'slug';\nimport ModelArticle from './helpers/model-article';\nimport logger from '../../common/utils/logger';\n\nexport default () => {\n  return {\n    getBySlug: (req, res) => {\n      ModelArticle.find({ slug: req.params.slug }).lean().exec((err, articles) => {\n        if (err) {\n          logger.error(err);\n          return res.status(500);\n        }\n        res.json(articles[0] || {});\n      });\n    },\n    getAll: (req, res) => {\n      ModelArticle.find().lean().exec((err, articles) => {\n        if (err) {\n          logger.error(err);\n          return res.status(500);\n        }\n        res.json(articles);\n      });\n    },\n    post: (req, res) => {\n      const article = new ModelArticle({\n        slug: slug(req.body.title, { lower: true, symbols: true }),\n        createdDate: new Date().toISOString(),\n        title: req.body.title,\n        contents: req.body.contents\n      });\n      article.save((err, article) => {\n        if (err) {\n          logger.error(err);\n          return res.status(500);\n        }\n        if (req.xhr) return res.status(201).json(article);\n        return res.redirect(`/articles/${article.slug}`);\n      });\n    }\n  };\n};\n"]}